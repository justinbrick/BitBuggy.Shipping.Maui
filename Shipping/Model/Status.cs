/*
 * BitBuggy Shipping
 *
 * Management of shipping and delivery information.
 *
 * The version of the OpenAPI document: 2.0.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = BitBuggy.Shipping.Maui.Shipping.Client.OpenAPIDateConverter;

namespace BitBuggy.Shipping.Maui.Shipping.Model
{
    /// <summary>
    /// The shipment status enum represents the different statuses that a shipment can be in.
    /// </summary>
    /// <value>The shipment status enum represents the different statuses that a shipment can be in.</value>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum Status
    {
        /// <summary>
        /// Enum Pending for value: pending
        /// </summary>
        [EnumMember(Value = "pending")]
        Pending = 1,

        /// <summary>
        /// Enum Shipped for value: shipped
        /// </summary>
        [EnumMember(Value = "shipped")]
        Shipped = 2,

        /// <summary>
        /// Enum InTransit for value: in_transit
        /// </summary>
        [EnumMember(Value = "in_transit")]
        InTransit = 3,

        /// <summary>
        /// Enum Delivered for value: delivered
        /// </summary>
        [EnumMember(Value = "delivered")]
        Delivered = 4,

        /// <summary>
        /// Enum Exception for value: exception
        /// </summary>
        [EnumMember(Value = "exception")]
        Exception = 5
    }

}
